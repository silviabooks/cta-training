version: "3.8"
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - .docker-data/pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 20

  adminer:
    image: adminer:4.8.1
    ports:
      - "${ADMINER_PORT:-8008}:8080"
    depends_on:
      postgres:
        condition: service_healthy

  hasura:
    image: hasura/graphql-engine:v2.1.1
    depends_on:
      postgres:
        condition: service_healthy
      multi:
        condition: service_healthy
    ports:
      - "${HASURA_PORT:-8080}:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/postgres
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_ADMIN_SECRET:-hasura}"
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "${HASURA_JWT_SECRET:-h2leOvdgjwpV0As5L8rZlV3VDVOsOmwk}"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      MULTI_BASE_URL: http://multi:4000

  multi:
    build:
      context: ./multi
    ports:
      - "${MULTI_PORT:-4000}:4000"
    volumes:
      - ./multi/src:/usr/src/app/src:delegated
    environment:
      NODE_ENV: development
      HASURA_ENDPOINT: http://hasura:8080/v1/graphql
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://multi:4000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 20

  app:
    build:
      context: ./app
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - ./app/public:/usr/src/app/public:delegated
      - ./app/src:/usr/src/app/src:delegated
    environment:
      CHOKIDAR_USEPOLLING: "true"
    working_dir: /usr/src/app
    entrypoint: ["npm", "start"]
    stdin_open: true
    tty: true

  migrations:
    build:
      context: ./meta
    depends_on:
      hasura:
        condition: service_started
    volumes:
      - ./meta/metadata:/metadata:cached
      - ./meta/migrations:/migrations:cached
      - ./meta/seeds:/seeds:cached
    environment:
      HASURA_ENDPOINT: http://hasura:8080
      HASURA_ADMIN_SECRET: ${HASURA_ADMIN_SECRET:-hasura}
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
    stdin_open: true
    tty: true
